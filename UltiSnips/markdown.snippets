global !p

# 识别数学环境
def math():
    c_y = vim.current.window.cursor[0]
    c_x = vim.current.window.cursor[1]
    f_x = c_x - 1
    b_x = c_x - 1
    f_y = c_y - 1
    b_y = c_y 
    len_current_line = len(vim.current.line)
    len_current_buffer = len(vim.current.buffer)
    while f_x + 1:
        if (vim.current.buffer[c_y - 1][f_x] == "$") and (vim.current.buffer[c_y - 1][f_x + 1] not in [".", " "]):
            while b_x < len_current_line:
                if vim.current.buffer[c_y - 1][b_x] == "$":
                    return True
                b_x += 1
        f_x -= 1

    while f_y + 1:
        if vim.current.buffer[f_y][:].strip() == "":
            return False
        elif vim.current.buffer[f_y][0:1] == "$":
            while b_y < len_current_buffer:
                if vim.current.buffer[b_y][:].strip() == "":
                    return False
                elif vim.current.buffer[b_y][0:1] == "$":
                    return True
                b_y += 1
        f_y -= 1
    return False


endglobal

# markdown 基本操作
snippet sign "Signature"
<h6 style="text-align:right">
Yours sincerely
<br>
<br>
Baitwo02
</h6>
endsnippet

snippet "table(\d+)" "创建表格" brA
$0`!p snip.rv = '|' + '<++>|' * int(match.group(1))`
`!p snip.rv = '|' + ':---|' * int(match.group(1))`
`!p snip.rv = '|' + '<++>|' * int(match.group(1))`
endsnippet

snippet ";(\d+)" "创建标题" brA
`!p snip.rv = '#' * int(match.group(1))` $0
<++>
endsnippet

snippet ";b" "粗体" brA
**$1**$0
endsnippet

snippet ";i" "斜体" brA
*$1*$0
endsnippet

# priority 90
# snippet tb "下标" i
# <sub>$1</sub>$0
# endsnippet
 
# priority 90
# snippet tp "上标" i
# <sup>$1</sup>$0
# endsnippet

snippet "red" "红色字体" wr
<font color="red">$1</font>$0
endsnippet

snippet "green" "绿色字体" wr
<font color="green">$1</font>$0
endsnippet

# 生成数学环境
snippet lm "line math environment" Aw
\$$1\$$0
endsnippet

snippet dlm "displaystyle line math environment" Aw
\$\displaystyle $1\$$0
endsnippet

snippet mm "multiple lines math environment" Aw
\$
$1
\$
$0
endsnippet

snippet dmm "displaystyle multiple lines math environment" Aw
\$\displaystyle
$1
\$
$0
endsnippet

snippet lcm "line center math environment" Aw
\$\$$1\$\$$0
endsnippet

snippet dlcm "displaystyle line center math environment" Aw
\$\$\displaystyle $1\$\$$0
endsnippet

snippet cmm "multiple lines center math environment" Aw
\$\$
$1
\$\$
$0
endsnippet

snippet dcmm "displaystyle multiple lines center math environment" Aw
\$\$\displaystyle
$1
\$\$
$0
endsnippet

# 数学环境下的补全
context "math()"
snippet { "\{" iA
\{
endsnippet

context "math()"
snippet } "\}" iA
\}
endsnippet

context "math()"
snippet beg "begin() / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

# 下标
context "math()"
snippet "([A-Za-z]+)(\d)" "auto subscript1" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`$1}$0
endsnippet

# 下标
priority 100
context "math()"
snippet tb "A_{}" iA
_{$1}$0
endsnippet

# 上标
priority 100
context "math()"
snippet tp "A^{}" iA
^{$1}$0
endsnippet

# 分数
context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

# 头部
priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet 

# 希腊字母
context "math()"
snippet Alh "\Alpha" wA
\Alpha
endsnippet

context "math()"
snippet alh "\alpha" wrA
\alpha
endsnippet

context "math()"
snippet Bta "\Beat" wrA
\Beta
endsnippet

context "math()"
snippet Gam "\Gamma" wrA
\Gamma
endsnippet

context "math()"
snippet gam "\gamma" wrA
\gamma
endsnippet

context "math()"
snippet Dta "\Delta" wrA
\Delta
endsnippet

context "math()"
snippet dta "\delta" wrA
\delta
endsnippet

context "math()"
snippet Tta "\Theta" wrA
\Theta
endsnippet

context "math()"
snippet tta "\theta" wrA
\theta
endsnippet

context "math()"
snippet Lam "\Lambda" wrA
\Lambda
endsnippet

context "math()"
snippet lam "\lambda" wrA
\lambda
endsnippet

context "math()"
snippet Mu "\Mu" wrA
\Mu
endsnippet

context "math()"
snippet mu "\mu" wrA
\mu
endsnippet

context "math()"
snippet Xi "\Xi" wrA
\Xi
endsnippet

context "math()"
snippet xi "\xi" wrA
\xi
endsnippet

context "math()"
snippet Pi "\Pi" wrA
\Pi
endsnippet

context "math()"
snippet Rho "\Rho" wrA
\Rho
endsnippet

context "math()"
snippet rho "\rho" wrA
\rho
endsnippet

context "math()"
snippet Sgm "\Sigma" wrA
\Sigma
endsnippet

context "math()"
snippet sgm "\sigma" wrA
\sigma
endsnippet

context "math()"
snippet Tau "\Tau" wrA
\Tau
endsnippet

context "math()"
snippet tau "\tau" wrA
tau
endsnippet

context "math()"
snippet Phi "\Phi" wrA
\Phi
endsnippet

context "math()"
snippet phi "\phi" wrA
\phi
endsnippet

context "math()"
snippet varPhi "\varPhi" wrA
\varPhi
endsnippet

context "math()"
snippet varphi "\varphi" wrA
\varphi
endsnippet

context "math()"
snippet Omega "\Omega" wrA
\Omega
endsnippet

context "math()"
snippet omega "\omega" wrA
\omega
endsnippet

# 操作符号
context "math()"
snippet lim "\lim" wrA
\lim_{$1->$2} $0
endsnippet

context "math()"
snippet sqr "开方" wrA
\sqrt[${1:2}]{$2}$0
endsnippet

# ========== set ==========
context "math()"
snippet eset "\emptyset" wrA
\emptyset
endsnippet

context "math()"
snippet bec "\because" wrA
\because
endsnippet

context "math()"
snippet so "\therefore" wrA
\therefore
endsnippet

context "math()"
snippet forall "\forall" wrA
\forall
endsnippet

context "math()"
snippet subset "\subset" wrA
\subset
endsnippet

context "math()"
snippet supset "\supset" wrA
\supset
endsnippet

context "math()"
snippet in "\in" wrA
\in
endsnippet

context "math()"
snippet notin "\notin" wrA
\notin
endsnippet

context "math()"
snippet ni "\ni" wrA
\ni
endsnippet

context "math()"
snippet notni "\notni" wrA
\notni
endsnippet

# ========= calu ==========
context "math()"
snippet sum "\sum" wrA
\sum
endsnippet

context "math()"
snippet prod "\prod" wrA
\prod
endsnippet

# context "math()"
# snippet int "\int" wrA
# \int
# endsnippet

context "math()"
snippet iint "\iint" wrA
\iint
endsnippet

context "math()"
snippet iiint "\iiint" wrA
\iiint
endsnippet

context "math()"
snippet oint "\oint" wrA
\oint
endsnippet

context "math()"
snippet oiint "\oiint" wrA
\oiint
endsnippet

context "math()"
snippet oiiint "\oiiint" wrA
\oiiint
endsnippet

context "math()"
snippet bcap "\bigcap" wrA
\bigcap
endsnippet

context "math()"
snippet bcup "\bigcup" wrA
\bigcup
endsnippet

# () {} []
context "math()"
snippet l\( "\left( ... \right)" iA
\left($1\right)$0
endsnippet

context "math()"
snippet r\) "\right)" iA
\right)
endsnippet

context "math()"
snippet l[ "\left[ ... \right]" iA
\left[$1\right]$0
endsnippet

context "math()"
snippet r] "\right]" iA
\right]
endsnippet

context "math()"
snippet l{ "\left{ ... \right}" iA
\left{$1\right}$0
endsnippet

context "math()"
snippet r} "\right}" iA
\right}
endsnippet

# 符号
context "math()"
snippet "to" "左箭头" wrA
\to
endsnippet

context "math()"
snippet "lto" "长箭头" wrA
\longrightarrow
endsnippet

context "math()"
snippet "llto" "长长箭头" wrA
\longlongrightarrow
endsnippet

context "math()"
snippet ";q" "空格" wrA
\quad $0
endsnippet

context "math()"
snippet ";a" "5/18空格" wrA
\; $0
endsnippet


